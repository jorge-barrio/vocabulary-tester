/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testGame.UI;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.input.DataFormat.URL;
import static javafx.scene.input.KeyCode.M;
import static javafx.scene.input.KeyCode.N;

/**
 *
 * @author jorge
 */
public class TestGameUI extends javax.swing.JFrame {
    
    private final String nameQuestionsFile = "questions.txt";
    private final String nameAnswersFile = "answers.txt";
    
    boolean block = false;
    
    public int pos;
    public int numCorrectAnswers;
    
    public ArrayList <String> questions = new ArrayList <>();
    public ArrayList <String> answers = new ArrayList <>();
    
    public ArrayList <Integer> askedQuestions = new ArrayList <>();
    
    public ArrayList <String> badQuestions = new ArrayList <>();
    public ArrayList <String> badAnswers = new ArrayList <>();
    
    
    /**
     * Creates new form TestGameUI
     */
    public TestGameUI() throws IOException {
        initComponents();
        pos = -1;
        readFile();
        newQuestion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        title = new javax.swing.JPanel();
        textTitle = new javax.swing.JLabel();
        information = new javax.swing.JPanel();
        textWrong = new javax.swing.JLabel();
        wrongAnswers = new javax.swing.JLabel();
        correctAnswers = new javax.swing.JLabel();
        textCorrect = new javax.swing.JLabel();
        Game = new javax.swing.JPanel();
        Question = new javax.swing.JPanel();
        textQuest = new javax.swing.JLabel();
        textWhatIsTheMeaningOf = new javax.swing.JLabel();
        word = new javax.swing.JLabel();
        Answer = new javax.swing.JPanel();
        answer1 = new javax.swing.JButton();
        answer2 = new javax.swing.JButton();
        answer3 = new javax.swing.JButton();
        answer4 = new javax.swing.JButton();
        next = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(233, 159, 85));

        backgroundPanel.setBackground(new java.awt.Color(255, 183, 110));

        title.setBackground(new java.awt.Color(255, 183, 110));

        textTitle.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        textTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textTitle.setText("TestGame    Topic: ");

        javax.swing.GroupLayout titleLayout = new javax.swing.GroupLayout(title);
        title.setLayout(titleLayout);
        titleLayout.setHorizontalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(titleLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(textTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        titleLayout.setVerticalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 81, Short.MAX_VALUE)
            .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(titleLayout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(textTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        information.setBackground(new java.awt.Color(255, 183, 110));

        textWrong.setText("Wrong answers: ");

        wrongAnswers.setText("0");

        correctAnswers.setText("0");

        textCorrect.setText("Correct answers: ");

        javax.swing.GroupLayout informationLayout = new javax.swing.GroupLayout(information);
        information.setLayout(informationLayout);
        informationLayout.setHorizontalGroup(
            informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationLayout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(textCorrect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(correctAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textWrong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(wrongAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        informationLayout.setVerticalGroup(
            informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wrongAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCorrect)
                    .addComponent(correctAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textWrong))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Game.setBackground(new java.awt.Color(255, 183, 110));

        Question.setBackground(new java.awt.Color(255, 183, 110));

        textQuest.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        textQuest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textQuest.setText("?");

        textWhatIsTheMeaningOf.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        textWhatIsTheMeaningOf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textWhatIsTheMeaningOf.setText("What is the meaning of ...");

        word.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        word.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout QuestionLayout = new javax.swing.GroupLayout(Question);
        Question.setLayout(QuestionLayout);
        QuestionLayout.setHorizontalGroup(
            QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textWhatIsTheMeaningOf, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textQuest, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(word, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addContainerGap())
        );
        QuestionLayout.setVerticalGroup(
            QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textQuest, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textWhatIsTheMeaningOf, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Answer.setBackground(new java.awt.Color(255, 183, 110));

        answer1.setBackground(new java.awt.Color(254, 254, 254));
        answer1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        answer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer1ActionPerformed(evt);
            }
        });

        answer2.setBackground(new java.awt.Color(254, 254, 254));
        answer2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        answer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer2ActionPerformed(evt);
            }
        });

        answer3.setBackground(new java.awt.Color(254, 254, 254));
        answer3.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        answer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer3ActionPerformed(evt);
            }
        });

        answer4.setBackground(new java.awt.Color(254, 254, 254));
        answer4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        answer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AnswerLayout = new javax.swing.GroupLayout(Answer);
        Answer.setLayout(AnswerLayout);
        AnswerLayout.setHorizontalGroup(
            AnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AnswerLayout.createSequentialGroup()
                        .addComponent(answer1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(answer2, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))
                    .addGroup(AnswerLayout.createSequentialGroup()
                        .addComponent(answer3, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(answer4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );
        AnswerLayout.setVerticalGroup(
            AnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnswerLayout.createSequentialGroup()
                .addGroup(AnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(answer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(answer2, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answer3, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                    .addComponent(answer4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout GameLayout = new javax.swing.GroupLayout(Game);
        Game.setLayout(GameLayout);
        GameLayout.setHorizontalGroup(
            GameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Answer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(GameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GameLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Question, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        GameLayout.setVerticalGroup(
            GameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GameLayout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(Answer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(GameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GameLayout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addComponent(Question, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(232, Short.MAX_VALUE)))
        );

        next.setText("NEXT");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Game, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(information, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(next)
                .addGap(31, 31, 31))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(information, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Game, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14)
                .addComponent(next)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void answer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer1ActionPerformed
        checkResult(answer1);
    }//GEN-LAST:event_answer1ActionPerformed

    private void answer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer2ActionPerformed
        checkResult(answer2);
    }//GEN-LAST:event_answer2ActionPerformed

    private void answer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer3ActionPerformed
        checkResult(answer3);
    }//GEN-LAST:event_answer3ActionPerformed

    private void answer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer4ActionPerformed
        checkResult(answer4);
    }//GEN-LAST:event_answer4ActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        newQuestion();
    }//GEN-LAST:event_nextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestGameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestGameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestGameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestGameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new TestGameUI().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(TestGameUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }
    
    public void readFile() throws FileNotFoundException, IOException{
        URL url = getClass().getResource("../Files/"+nameQuestionsFile);
        File archivo = new File(url.getPath());
        FileReader fr = new FileReader (archivo);
        BufferedReader br = new BufferedReader(fr);
        
        String line;
        
        boolean first = true;
        
        while ((line=br.readLine()) != null){
            if (first){
                textTitle.setText(textTitle.getText() + line);
                first=false;
                continue;
            }
            questions.add(line);
        }
        
        url = getClass().getResource("../Files/"+nameAnswersFile);
        archivo = new File (url.getPath());
        fr = new FileReader (archivo);
        br = new BufferedReader(fr);
        
        first = true;
        
        while ((line=br.readLine()) != null){
            if (first){
                first=false;
                continue;
            }
            answers.add(line);
        }
        
        if (questions.size() != answers.size()){
            throw new IllegalStateException("Questions don't correspond to the answers");
        }
    }
    
    /**
     * Ask a new question
     */
    public void newQuestion () {
        
        if (askedQuestions.size() == questions.size()){
            System.exit(0);
        }
            
        do{
            pos= (int)Math.floor(Math.random()*((answers.size()-1)-(0)+1)+(0));
        } while(askedQuestions.contains(pos));
        
        askedQuestions.add(pos);
        
        block = false;
        
        answer1.setBackground(Color.white);
        answer2.setBackground(Color.white);
        answer3.setBackground(Color.white);
        answer4.setBackground(Color.white);
        
        answer1.setText("");
        answer2.setText("");
        answer3.setText("");
        answer4.setText("");
        
        word.setText(questions.get(pos));

        
        ArrayList <String> choices = new ArrayList <>();
        choices.add(answers.get(pos));
            
        String line;
        
        int i = 0;
        
        while(i<4){
            line = answers.get((int)Math.floor(Math.random()*((answers.size()-1)-(0)+1)+(0)));
            if (!choices.contains(line)){
                choices.add(line);
                i++;
            }
        }
        
        boolean[] taken = {false,false,false,false};
        
        i = 1;
        
        while (i<4){
            switch ((int)Math.floor(Math.random()*((3)-(0)+1)+(0))){
                case 0:
                    if (!taken[0]){
                        answer1.setText(choices.get(i));
                        System.out.println(choices.get(i));
                        taken[0]=true;
                        i++;
                    }
                    break;
                case 1:
                    if (!taken[1]){
                        answer2.setText(choices.get(i));
                        System.out.println(choices.get(i));
                        taken[1]=true;
                        i++;
                    }
                    break;
                case 2:
                    if (!taken[2]){
                        answer3.setText(choices.get(i));
                        System.out.println(choices.get(i));
                        taken[2]=true;
                        i++;
                    }
                    break;
                case 3:
                    if (!taken[3]){
                        answer4.setText(choices.get(i));
                        System.out.println(choices.get(i));
                        taken[3]=true;
                        i++;
                    }
                    break;
                default:
                    throw new IllegalStateException("Fallo en switch");
            }
        }
        
        int num=0;
        
        for (i=0;i<4;i++){
            if (!taken[i]) num = i;
        }
        System.out.println();
        
        switch (num){
            case 0:
                answer1.setText(answers.get(pos));
                break;
            case 1:
                answer2.setText(answers.get(pos));
                break;
            case 2:
                answer3.setText(answers.get(pos));
                break;
            case 3:
                answer4.setText(answers.get(pos));
                break;
            default:
                throw new IllegalStateException("Fallo en switch");
        }        
    }
    
    public void checkResult (javax.swing.JButton bt){
        if (block) return;
        
        block=true;
        
        if (isCorrect(bt.getText())){
            correctAnswer(bt);
        } else {
            wrongAnswer(bt);
            showTheCorrect();
        }       
    }
    
    public boolean isCorrect (String answer){
        return answer.equals(answers.get(pos));
    }
    
    public void showTheCorrect(){
        if (isCorrect(answer1.getText())){
            answer1.setBackground(Color.green);
            saveBadAnswers(answer1.getText());
        } else if (isCorrect(answer2.getText())){
            answer2.setBackground(Color.green);
            saveBadAnswers(answer2.getText());
        } else if (isCorrect(answer3.getText())){
            answer3.setBackground(Color.green);
            saveBadAnswers(answer3.getText());
        } else if (isCorrect(answer4.getText())){
            answer4.setBackground(Color.green);
            saveBadAnswers(answer4.getText());
        }
    }
    
    public void saveBadAnswers (String correctAns){
        badAnswers.add(correctAns);
        badQuestions.add(questions.get(pos));
    }
    public void correctAnswer (javax.swing.JButton bt){
        numCorrectAnswers++;
        correctAnswers.setText(""+numCorrectAnswers);
        bt.setBackground(Color.green);
    }
    
    public void wrongAnswer (javax.swing.JButton bt){
        wrongAnswers.setText(""+(badQuestions.size()+1));
        bt.setBackground(Color.red);        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Answer;
    private javax.swing.JPanel Game;
    private javax.swing.JPanel Question;
    private javax.swing.JButton answer1;
    private javax.swing.JButton answer2;
    private javax.swing.JButton answer3;
    private javax.swing.JButton answer4;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel correctAnswers;
    private javax.swing.JPanel information;
    private javax.swing.JButton next;
    private javax.swing.JLabel textCorrect;
    private javax.swing.JLabel textQuest;
    private javax.swing.JLabel textTitle;
    private javax.swing.JLabel textWhatIsTheMeaningOf;
    private javax.swing.JLabel textWrong;
    private javax.swing.JPanel title;
    private javax.swing.JLabel word;
    private javax.swing.JLabel wrongAnswers;
    // End of variables declaration//GEN-END:variables
}
